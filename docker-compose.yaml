services:
  wiki:
    env_file:
      - config.env
    build:
      context: ./bergwerk-wiki
    container_name: wiki
    networks:
      - netzwerk
    depends_on:
      db:
        condition: service_healthy

  api:
    env_file:
      - config.env
    build:
      context: ./bergwerk-api
    container_name: api
    volumes:
      - ./bergwerk-api/app:/app  
    networks:
      - netzwerk
    depends_on:
      wiki:
        condition: service_started

  socketio:
    build:
      context: ./bergwerk-socketio
    container_name: socketio
    volumes:
      - ./bergwerk-socketio/app:/app
    networks:
      - netzwerk
    depends_on:
      wiki:
        condition: service_started
      api:
        condition: service_started


  caddy:
    image: caddy:latest
    env_file:
      - config.env
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./bergwerk-caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./bergwerk-caddy/html:/var/www/html
      - ./persist/caddy_data:/data
      - ./persist/caddy_config:/config
    networks:
      - netzwerk
    depends_on:
      wiki:
        condition: service_started
      api:
        condition: service_started
      socketio:
        condition: service_started


  db:
    env_file:
      - config.env
    build:
      context: ./bergwerk-db
    container_name: db
    ports:
      - "3306:3306"
    volumes:
      - ./persist/db_data:/var/lib/mysql
    networks:
      - netzwerk
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        timeout: 20s
        retries: 10

  cron:
    env_file:
      - config.env
    build:
      context: ./bergwerk-cron
    container_name: cron
    volumes:
      - ./bergwerk-cron/app:/usr/src/app
    networks:
      - netzwerk
    depends_on:
      wiki:
        condition: service_started
      db:
        condition: service_healthy

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - ./persist/ollama_code:/code
      - ./persist/ollama:/root/.ollama
      - ./bergwerk-ollama/entrypoint.sh:/entrypoint.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - netzwerk
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - netzwerk


networks:
  netzwerk:
    driver: bridge
  
